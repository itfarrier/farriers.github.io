{"version":3,"sources":["webpack:///./src/pages/404.en.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/data/messages/en.js","webpack:///./src/data/messages/ru.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/data/messages sync ^\\.\\/.*$","webpack:///./src/components/Footer/index.ts","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Head/index.ts","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/SelectLanguage/index.ts","webpack:///./src/components/SelectLanguage/SelectLanguage.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Main/index.ts","webpack:///./src/components/Main/Main.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","props","location","m","module","exports","require","default","description","keywords","title","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","map","./en","./en.js","./ru","./ru.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","Footer","react","href","Head","language","context","_props$i18nMessages","i18nMessages","Helmet","dir","lang","rel","sizes","type","color","hrefLang","content","name","property","size","key","sizesInPx","generateAppleTouch","generateFavicon","SelectLanguage","langsMenu","toggleLanguage","links","langKey","onClick","navigate","link","Header","_props$context","isDark","toggleDark","theme","Helmet_default","htmlAttributes","components_SelectLanguage","Main","addLocaleData","concat","en","ru","Layout","_staticQueryData$data","_1624542009","site","siteMetadata","languages","defaultLangKey","langs","getCurrentLangKey","homeLink","getLangs","getUrlForLang","index_es","locale","messages","Context","components_Head","components_Header","components_Main","components_Footer"],"mappings":"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","file":"component---src-pages-404-en-tsx-53072fd16a7f9227b2ff.js","sourcesContent":["import * as React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst NotFoundPage: React.FC = (props) => <Layout location={props.location}>404</Layout>;\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  description: 'horseshoeing and trimming',\n  keywords: [''],\n  title: 'farriers.ru',\n};\n","module.exports = {\n  description: 'ковка и расчистка',\n  keywords: [''],\n  title: 'farriers.ru',\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var map = {\n\t\"./en\": 161,\n\t\"./en.js\": 161,\n\t\"./ru\": 162,\n\t\"./ru.js\": 162\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 167;","import Footer from './Footer';\n\nexport default Footer;\n","import * as React from 'react';\n\nconst Footer: () => React.ReactElement = () => {\n  return (\n    <footer>\n      <a href={'mailto:info@farriers.ru'}>info@farriers.ru</a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Head from './Head';\n\nexport default Head;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Head: (props: any) => React.ReactElement = (props) => {\n  const {\n    context: { language },\n    i18nMessages: { description, keywords, title },\n    location: { href },\n  } = props;\n\n  const generateAndroidChrome = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/android-chrome-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  const generateAppleTouch = (sizesInPx: number[]): React.ReactElement[][] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement[] => [\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}.png`}\n          key={`1${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}-precomposed.png`}\n          key={`2${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n      ],\n    );\n  };\n  const generateFavicon = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/favicon-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  // const variantOfPageTitle: string = subPage\n  //   ? `${title} — ${description} — ${page} — ${subPage}`\n  //   : page\n  //   ? `${title} — ${description} — ${page}`\n  //   : `${title} — ${description}`;\n\n  return (\n    <Helmet>\n      <html dir={'ltr'} lang={language} />\n      <link\n        href={'/favicons/apple-touch-icon-precomposed.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link\n        href={'/favicons/apple-touch-icon.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link color={'#000'} href={'/favicons/safari-pinned-tab.svg'} rel={'mask-icon'} />\n      <link href={'/favicons/favicon.ico'} rel={'shortcut icon'} />\n      <link href={href} hrefLang={language} rel={'alternate'} />\n      <link href={href} rel={'canonical'} />\n      <meta content={'#fff'} name={'msapplication-TileColor'} />\n      <meta content={'#fff'} name={'theme-color'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} name={'twitter:image'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} property={'og:image'} />\n      <meta content={'/favicons/browserconfig.xml'} name={'msapplication-config'} />\n      <meta content={'/favicons/mstile-144x144.png'} name={'msapplication-TileImage'} />\n      <meta content={'512'} property={'og:image:height'} />\n      <meta content={'512'} property={'og:image:width'} />\n      <meta content={'@podabed'} name={'twitter:creator'} />\n      <meta content={'@podabed'} name={'twitter:site'} />\n      <meta content={'black-translucent'} name={'apple-mobile-web-app-status-bar-style'} />\n      <meta content={'summary'} name={'twitter:card'} />\n      <meta content={'website'} property={'og:type'} />\n      <meta content={'yes'} name={'apple-mobile-web-app-capable'} />\n      <meta content={href} name={'twitter:url'} />\n      <meta content={href} property={'og:url'} />\n      <meta content={description} name={'description'} />\n      <meta content={description} name={'twitter:description'} />\n      <meta content={description} property={'og:description'} />\n      <meta content={keywords} name={'keywords'} />\n      <meta content={title} name={'apple-mobile-web-app-title'} />\n      <meta content={title} name={'application-name'} />\n      <meta content={title} name={'twitter:title'} />\n      <meta content={title} property={'og:site_name'} />\n      <meta content={title} property={'og:title'} />\n      <meta content={language} property={'og:locale'} />\n      <title>{title}</title>\n      {generateAndroidChrome([36, 48, 72, 96, 144, 192, 256, 384, 512])}\n      {generateAppleTouch([57, 60, 72, 76, 114, 120, 144, 152, 180])}\n      {generateFavicon([16, 32])}\n    </Helmet>\n  );\n};\n\nexport default Head;\n","import SelectLanguage from './SelectLanguage';\n\nexport default SelectLanguage;\n","import { navigate } from 'gatsby';\nimport * as React from 'react';\n\nimport { ILangObject } from '../Layout/interfaces';\n\nconst SelectLanguage: (props: any) => React.ReactElement = (props) => {\n  const { langsMenu, toggleLanguage } = props;\n\n  const links: React.ReactElement[] = langsMenu.map(\n    (lang: ILangObject): React.ReactElement => {\n      const onClick: () => void = () => {\n        toggleLanguage(lang.langKey);\n        navigate(lang.link);\n      };\n\n      return (\n        <button key={lang.langKey} onClick={onClick}>\n          {lang.langKey}\n        </button>\n      );\n    },\n  );\n\n  return <>{links}</>;\n};\n\nexport default SelectLanguage;\n","import Header from './Header';\n\nexport default Header;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport SelectLanguage from '../SelectLanguage';\nimport { IProps } from './interfaces';\n\nconst Header: (props: IProps) => React.ReactElement = (props) => {\n  const {\n    context: { isDark, toggleDark, toggleLanguage },\n    langsMenu,\n  } = props;\n\n  const theme = isDark ? 'dark' : 'light';\n\n  return (\n    <header>\n      <Helmet htmlAttributes={{ theme }} />\n      <nav>\n        <button onClick={toggleDark}>{theme}</button>\n        <SelectLanguage langsMenu={langsMenu} toggleLanguage={toggleLanguage} />\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import Main from './Main';\n\nexport default Main;\n","import * as React from 'react';\n\nconst Main: (props: any) => React.ReactElement = (props) => {\n  return <main>{props.children}</main>;\n};\n\nexport default Main;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport 'intl';\nimport 'intl/locale-data/jsonp/en';\nimport 'intl/locale-data/jsonp/ru';\nimport { getCurrentLangKey, getLangs, getUrlForLang } from 'ptz-i18n';\nimport * as React from 'react';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport * as en from 'react-intl/locale-data/en';\nimport * as ru from 'react-intl/locale-data/ru';\n\nimport Context from '../Context/Context';\nimport Footer from '../Footer';\nimport Head from '../Head';\nimport Header from '../Header';\nimport Main from '../Main';\nimport { ILangObject } from './interfaces';\n\naddLocaleData([...en, ...ru]);\n\nconst Layout: React.FC = (props: any): React.ReactElement => {\n  const {\n    children,\n    location,\n    location: { pathname },\n  } = props;\n\n  const {\n    site: {\n      siteMetadata: {\n        languages: { defaultLangKey, langs },\n      },\n    },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          languages {\n            defaultLangKey\n            langs\n          }\n          title\n        }\n      }\n    }\n  `);\n\n  const langKey: string = getCurrentLangKey(langs, defaultLangKey, pathname);\n  const homeLink: string = `/${langKey}/`;\n  const langsMenu: ILangObject[] = getLangs(langs, langKey, getUrlForLang(homeLink, pathname));\n  const i18nMessages: { [key: string]: string } = require(`../../data/messages/${langKey}`);\n\n  return (\n    <IntlProvider locale={langKey} messages={i18nMessages}>\n      <Context.Consumer>\n        {(context) => (\n          <>\n            <Head context={context} i18nMessages={i18nMessages} location={location} />\n            <Header context={context} langsMenu={langsMenu} />\n            <Main children={children} />\n            <Footer />\n          </>\n        )}\n      </Context.Consumer>\n    </IntlProvider>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n"],"sourceRoot":""}