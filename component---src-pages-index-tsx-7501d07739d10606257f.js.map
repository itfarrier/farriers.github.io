{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/Footer/index.ts","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Head/index.ts","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/SelectLanguage/index.ts","webpack:///./src/components/SelectLanguage/SelectLanguage.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Main/index.ts","webpack:///./src/components/Main/Main.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","gatsby_plugin_intl__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_index_module_css__WEBPACK_IMPORTED_MODULE_3__","injectIntl","props","formatMessage","intl","location","className","styles","id","href","Footer","react","Head","language","context","Helmet","dir","lang","rel","sizes","type","color","hrefLang","content","name","property","toString","map","size","key","sizesInPx","generateAppleTouch","generateFavicon","SelectLanguage","gatsby_plugin_intl","languages","onClick","toggleLanguage","Header","_props$context","isDark","toggleDark","theme","Helmet_default","a","htmlAttributes","components_SelectLanguage","Main","children","Layout","objectDestructuringEmpty_default","_1307805519","data","site","siteMetadata","Context","Consumer","components_Head","components_Header","components_Main","components_Footer"],"mappings":"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","file":"component---src-pages-index-tsx-7501d07739d10606257f.js","sourcesContent":["import { injectIntl } from 'gatsby-plugin-intl';\nimport * as React from 'react';\n\nimport Layout from '../components/Layout';\nimport * as styles from './index.module.css';\n\nconst Index: React.FC = (props) => {\n  const {\n    intl: { formatMessage },\n    location,\n  } = props;\n\n  return (\n    <Layout location={location}>\n      <article>\n        <header>\n          <h1 className={styles.header}>{formatMessage({ id: 'horseshoeingAndTrimming' })}</h1>\n        </header>\n        <section>\n          <a href={'tel:+79333330477'}>+7&nbsp;(933)&nbsp;333&#x2012;04&#x2012;77</a>\n          {', '}\n          <a href={'tel:+79535852632'}>+7&nbsp;(953)&nbsp;585&#x2012;26&#x2012;32</a>\n          &thinsp;&mdash;&thinsp;{formatMessage({ id: 'vjacheslavShtol' })}\n        </section>\n      </article>\n    </Layout>\n  );\n};\n\nexport default injectIntl(Index);\n","import Footer from './Footer';\n\nexport default Footer;\n","import * as React from 'react';\n\nconst Footer: () => React.ReactElement = () => {\n  return (\n    <footer>\n      <a href={'mailto:info@farriers.ru'}>info@farriers.ru</a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Head from './Head';\n\nexport default Head;\n","import { injectIntl } from 'gatsby-plugin-intl';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Head: (props: any) => React.ReactElement = (props) => {\n  const {\n    context: { language },\n    intl: { formatMessage },\n    location: { href },\n  } = props;\n\n  const generateAndroidChrome = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/android-chrome-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  const generateAppleTouch = (sizesInPx: number[]): React.ReactElement[][] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement[] => [\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}.png`}\n          key={`1${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}-precomposed.png`}\n          key={`2${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n      ],\n    );\n  };\n  const generateFavicon = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/favicon-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n\n  return (\n    <Helmet>\n      <html dir={'ltr'} lang={language} />\n      <link\n        href={'/favicons/apple-touch-icon-precomposed.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link\n        href={'/favicons/apple-touch-icon.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link color={'#000'} href={'/favicons/safari-pinned-tab.svg'} rel={'mask-icon'} />\n      <link href={'/favicons/favicon.ico'} rel={'shortcut icon'} />\n      <link href={href} hrefLang={language} rel={'alternate'} />\n      <link href={href} rel={'canonical'} />\n      <meta content={'#fff'} name={'msapplication-TileColor'} />\n      <meta content={'#fff'} name={'theme-color'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} name={'twitter:image'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} property={'og:image'} />\n      <meta content={'/favicons/browserconfig.xml'} name={'msapplication-config'} />\n      <meta content={'/favicons/mstile-144x144.png'} name={'msapplication-TileImage'} />\n      <meta content={'512'} property={'og:image:height'} />\n      <meta content={'512'} property={'og:image:width'} />\n      <meta content={'@podabed'} name={'twitter:creator'} />\n      <meta content={'@podabed'} name={'twitter:site'} />\n      <meta content={'black-translucent'} name={'apple-mobile-web-app-status-bar-style'} />\n      <meta content={'summary'} name={'twitter:card'} />\n      <meta content={'website'} property={'og:type'} />\n      <meta content={'yes'} name={'apple-mobile-web-app-capable'} />\n      <meta content={href} name={'twitter:url'} />\n      <meta content={href} property={'og:url'} />\n      <meta content={formatMessage({ id: 'horseshoeingAndTrimming' })} name={'description'} />\n      <meta\n        content={formatMessage({ id: 'horseshoeingAndTrimming' })}\n        name={'twitter:description'}\n      />\n      <meta\n        content={formatMessage({ id: 'horseshoeingAndTrimming' })}\n        property={'og:description'}\n      />\n      <meta content={formatMessage({ id: 'keywords' }).toString()} name={'keywords'} />\n      <meta content={formatMessage({ id: 'title' })} name={'apple-mobile-web-app-title'} />\n      <meta content={formatMessage({ id: 'title' })} name={'application-name'} />\n      <meta content={formatMessage({ id: 'title' })} name={'twitter:title'} />\n      <meta content={formatMessage({ id: 'title' })} property={'og:site_name'} />\n      <meta content={formatMessage({ id: 'title' })} property={'og:title'} />\n      <meta content={language} property={'og:locale'} />\n      <title>{formatMessage({ id: 'title' })}</title>\n      {generateAndroidChrome([36, 48, 72, 96, 144, 192, 256, 384, 512])}\n      {generateAppleTouch([57, 60, 72, 76, 114, 120, 144, 152, 180])}\n      {generateFavicon([16, 32])}\n    </Helmet>\n  );\n};\n\nexport default injectIntl(Head);\n","import SelectLanguage from './SelectLanguage';\n\nexport default SelectLanguage;\n","import { IntlContextConsumer } from 'gatsby-plugin-intl';\nimport * as React from 'react';\n\nconst SelectLanguage = (props: any): React.ReactElement => {\n  return (\n    <IntlContextConsumer>\n      {(context: any): React.ReactElement[] => {\n        const { languages } = context;\n\n        return languages.map(\n          (language: string): React.ReactElement => {\n            const onClick = (): void => {\n              return props.toggleLanguage(language);\n            };\n\n            return (\n              <button key={language} onClick={onClick}>\n                {language}\n              </button>\n            );\n          },\n        );\n      }}\n    </IntlContextConsumer>\n  );\n};\n\nexport default SelectLanguage;\n","import Header from './Header';\n\nexport default Header;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport SelectLanguage from '../SelectLanguage';\nimport { IProps } from './interfaces';\n\nconst Header: (props: IProps) => React.ReactElement = (props) => {\n  const {\n    context: { isDark, toggleDark, toggleLanguage },\n  } = props;\n\n  const theme = isDark ? 'dark' : 'light';\n\n  return (\n    <header>\n      <Helmet htmlAttributes={{ theme }} />\n      <nav>\n        <button onClick={toggleDark}>{theme}</button>\n        <SelectLanguage toggleLanguage={toggleLanguage} />\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import Main from './Main';\n\nexport default Main;\n","import * as React from 'react';\n\nconst Main: (props: any) => React.ReactElement = (props) => {\n  return <main>{props.children}</main>;\n};\n\nexport default Main;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport * as React from 'react';\n\nimport Context from '../Context/Context';\nimport Footer from '../Footer';\nimport Head from '../Head';\nimport Header from '../Header';\nimport Main from '../Main';\n\nconst Layout: React.FC = (props: any): React.ReactElement => {\n  const { children, location } = props;\n\n  const {\n    site: {\n      siteMetadata: {},\n    },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <Context.Consumer>\n      {(context) => (\n        <>\n          <Head context={context} location={location} />\n          <Header context={context} />\n          <Main children={children} />\n          <Footer />\n        </>\n      )}\n    </Context.Consumer>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n"],"sourceRoot":""}