{"version":3,"sources":["webpack:///./src/pages/index.ru.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/data/messages/en.js","webpack:///./src/data/messages/ru.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/data/messages sync ^\\.\\/.*$","webpack:///./src/components/SelectLanguage/index.ts","webpack:///./src/components/SelectLanguage/SelectLanguage.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Head/index.ts","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_index_module_css__WEBPACK_IMPORTED_MODULE_2__","Index","props","location","className","styles","href","m","module","exports","require","default","description","keywords","title","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","React","createContext","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","map","./en","./en.js","./ru","./ru.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","SelectLanguage","langsMenu","toggleLanguage","links","lang","react","key","langKey","onClick","navigate","link","Header","_props$context","context","isDark","language","toggleDark","homeLink","theme","Helmet_default","htmlAttributes","components_SelectLanguage","Head","_props$i18nMessages","i18nMessages","Helmet","dir","rel","sizes","type","color","hrefLang","content","name","property","size","sizesInPx","generateAppleTouch","generateFavicon","addLocaleData","concat","en","ru","Layout","_staticQueryData$data","_1624542009","site","siteMetadata","languages","defaultLangKey","langs","getCurrentLangKey","getLangs","getUrlForLang","index_es","locale","messages","Context","components_Head","components_Header"],"mappings":"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","file":"component---src-pages-index-ru-tsx-94d7b71e7b6e493ef21e.js","sourcesContent":["import * as React from 'react';\n\nimport Layout from '../components/Layout';\nimport * as styles from './index.module.css';\n\nconst Index: React.FC = (props) => (\n  <Layout location={props.location}>\n    <header>\n      <h1 className={styles.header}>РАСЧИСТКА И КОВКА ЛОШАДЕЙ</h1>\n    </header>\n    <main>\n      <p>\n        <a href={'tel:+79333330477'}>+7&nbsp;(933)&nbsp;333&#x2012;04&#x2012;77</a>,\n        <a href={'tel:+79535852632'}>+7&nbsp;(953)&nbsp;585&#x2012;26&#x2012;32</a> &mdash; Вячеслав\n        Штоль\n      </p>\n      <p>\n        <a href={'tel:+79994416900'}>+7&nbsp;(999)&nbsp;441&#x2012;69&#x2012;00</a>,\n        <a href={'tel:+375333197897'}>+375&nbsp;(33)&nbsp;319&#x2012;78&#x2012;97</a> &mdash;\n        Дмитрий Подабед\n      </p>\n      <p>\n        <a href={'mailto:info@farriers.ru'}>info@farriers.ru</a>\n      </p>\n    </main>\n  </Layout>\n);\n\nexport default Index;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  description: 'horseshoeing and trimming',\n  keywords: [''],\n  title: 'farriers.ru',\n};\n","module.exports = {\n  description: 'ковка и расчистка',\n  keywords: [''],\n  title: 'farriers.ru',\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var map = {\n\t\"./en\": 162,\n\t\"./en.js\": 162,\n\t\"./ru\": 163,\n\t\"./ru.js\": 163\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 168;","import SelectLanguage from './SelectLanguage';\n\nexport default SelectLanguage;\n","import { navigate } from 'gatsby';\nimport * as React from 'react';\n\nimport { ILangObject } from '../../interfaces';\n\nconst SelectLanguage: React.FC = (props: any): React.ReactElement => {\n  const { langsMenu, toggleLanguage } = props;\n\n  const links: React.ReactElement[] = langsMenu.map(\n    (lang: ILangObject): React.ReactElement => {\n      const onClick: () => void = (): void => {\n        toggleLanguage(lang.langKey);\n        navigate(lang.link);\n      };\n\n      return (\n        <button key={lang.langKey} onClick={onClick}>\n          {lang.langKey}\n        </button>\n      );\n    },\n  );\n\n  return <>{links}</>;\n};\n\nexport default SelectLanguage;\n","import Header from './Header';\n\nexport default Header;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport SelectLanguage from '../SelectLanguage';\n\nconst Header: React.FC = (props: any): React.ReactElement => {\n  const {\n    context: { isDark, language, toggleDark, toggleLanguage },\n    homeLink,\n    langsMenu,\n  } = props;\n\n  const theme = isDark ? 'dark' : 'light';\n\n  return (\n    <header>\n      <Helmet htmlAttributes={{ theme }} />\n      <nav>\n        <button onClick={toggleDark}>{theme}</button>\n        <SelectLanguage langsMenu={langsMenu} language={language} toggleLanguage={toggleLanguage} />\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import Head from './Head';\n\nexport default Head;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Head: React.FC = (props: any): React.ReactElement => {\n  const {\n    context: { language },\n    i18nMessages: { description, keywords, title },\n    location: { href },\n  } = props;\n\n  const generateAndroidChrome = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/android-chrome-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  const generateAppleTouch = (sizesInPx: number[]): React.ReactElement[][] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement[] => [\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}.png`}\n          key={`1${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}-precomposed.png`}\n          key={`2${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n      ],\n    );\n  };\n  const generateFavicon = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/favicon-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  // const variantOfPageTitle: string = subPage\n  //   ? `${title} — ${description} — ${page} — ${subPage}`\n  //   : page\n  //   ? `${title} — ${description} — ${page}`\n  //   : `${title} — ${description}`;\n\n  return (\n    <Helmet>\n      <html dir={'ltr'} lang={language} />\n      <link\n        href={'/favicons/apple-touch-icon-precomposed.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link\n        href={'/favicons/apple-touch-icon.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link color={'#000'} href={'/favicons/safari-pinned-tab.svg'} rel={'mask-icon'} />\n      <link href={'/favicons/favicon.ico'} rel={'shortcut icon'} />\n      <link href={href} hrefLang={language} rel={'alternate'} />\n      <link href={href} rel={'canonical'} />\n      <meta content={'#fff'} name={'msapplication-TileColor'} />\n      <meta content={'#fff'} name={'theme-color'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} name={'twitter:image'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} property={'og:image'} />\n      <meta content={'/favicons/browserconfig.xml'} name={'msapplication-config'} />\n      <meta content={'/favicons/mstile-144x144.png'} name={'msapplication-TileImage'} />\n      <meta content={'512'} property={'og:image:height'} />\n      <meta content={'512'} property={'og:image:width'} />\n      <meta content={'@podabed'} name={'twitter:creator'} />\n      <meta content={'@podabed'} name={'twitter:site'} />\n      <meta content={'black-translucent'} name={'apple-mobile-web-app-status-bar-style'} />\n      <meta content={'summary'} name={'twitter:card'} />\n      <meta content={'website'} property={'og:type'} />\n      <meta content={'yes'} name={'apple-mobile-web-app-capable'} />\n      <meta content={href} name={'twitter:url'} />\n      <meta content={href} property={'og:url'} />\n      <meta content={description} name={'description'} />\n      <meta content={description} name={'twitter:description'} />\n      <meta content={description} property={'og:description'} />\n      <meta content={keywords} name={'keywords'} />\n      <meta content={title} name={'apple-mobile-web-app-title'} />\n      <meta content={title} name={'application-name'} />\n      <meta content={title} name={'twitter:title'} />\n      <meta content={title} property={'og:site_name'} />\n      <meta content={title} property={'og:title'} />\n      <meta content={language} property={'og:locale'} />\n      <title>{title}</title>\n      {generateAndroidChrome([36, 48, 72, 96, 144, 192, 256, 384, 512])}\n      {generateAppleTouch([57, 60, 72, 76, 114, 120, 144, 152, 180])}\n      {generateFavicon([16, 32])}\n    </Helmet>\n  );\n};\n\nexport default Head;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport 'intl';\nimport 'intl/locale-data/jsonp/en';\nimport 'intl/locale-data/jsonp/ru';\nimport { getCurrentLangKey, getLangs, getUrlForLang } from 'ptz-i18n';\nimport * as React from 'react';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport * as en from 'react-intl/locale-data/en';\nimport * as ru from 'react-intl/locale-data/ru';\n\nimport { ILangObject } from '../../interfaces';\nimport Context from '../Context';\nimport Header from '../Header';\nimport Head from '../Head';\n\naddLocaleData([...en, ...ru]);\n\nconst Layout: React.FC = (props: any): React.ReactElement => {\n  const {\n    children,\n    location: { pathname },\n  } = props;\n\n  const {\n    site: {\n      siteMetadata: {\n        languages: { defaultLangKey, langs },\n      },\n    },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          languages {\n            defaultLangKey\n            langs\n          }\n          title\n        }\n      }\n    }\n  `);\n\n  const langKey: string = getCurrentLangKey(langs, defaultLangKey, pathname);\n  const homeLink: string = `/${langKey}/`;\n  const langsMenu: ILangObject[] = getLangs(langs, langKey, getUrlForLang(homeLink, pathname));\n  const i18nMessages: { [key: string]: string } = require(`../../data/messages/${langKey}`);\n\n  return (\n    <IntlProvider locale={langKey} messages={i18nMessages}>\n      <Context.Consumer>\n        {(context) => (\n          <>\n            <Head context={context} i18nMessages={i18nMessages} {...props} />\n            <Header\n              context={context}\n              homeLink={homeLink}\n              langsMenu={langsMenu}\n              locale={langKey}\n              pathname={pathname}\n            />\n            <main>{children}</main>\n          </>\n        )}\n      </Context.Consumer>\n    </IntlProvider>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n"],"sourceRoot":""}