{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/Footer/index.ts","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Head/index.ts","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/SelectLanguage/index.ts","webpack:///./src/components/SelectLanguage/SelectLanguage.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Main/index.ts","webpack:///./src/components/Main/Main.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","props","location","Footer","react","href","Head","injectIntl","language","context","formatMessage","intl","Helmet","dir","lang","rel","sizes","type","color","hrefLang","content","name","property","id","toString","map","size","key","sizesInPx","generateAppleTouch","generateFavicon","SelectLanguage","gatsby_plugin_intl","languages","onClick","toggleLanguage","Header","_props$context","isDark","toggleDark","theme","Helmet_default","a","htmlAttributes","components_SelectLanguage","Main","children","Layout","objectDestructuringEmpty_default","_1307805519","data","site","siteMetadata","Context","Consumer","components_Head","components_Header","components_Main","components_Footer"],"mappings":"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","file":"component---src-pages-404-tsx-4bf8f423dabff6ec4b84.js","sourcesContent":["import * as React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst NotFoundPage: React.FC = (props) => <Layout location={props.location}>404</Layout>;\n\nexport default NotFoundPage;\n","import Footer from './Footer';\n\nexport default Footer;\n","import * as React from 'react';\n\nconst Footer: () => React.ReactElement = () => {\n  return (\n    <footer>\n      <a href={'mailto:info@farriers.ru'}>info@farriers.ru</a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Head from './Head';\n\nexport default Head;\n","import { injectIntl } from 'gatsby-plugin-intl';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Head: (props: any) => React.ReactElement = (props) => {\n  const {\n    context: { language },\n    intl: { formatMessage },\n    location: { href },\n  } = props;\n\n  const generateAndroidChrome = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/android-chrome-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  const generateAppleTouch = (sizesInPx: number[]): React.ReactElement[][] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement[] => [\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}.png`}\n          key={`1${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}-precomposed.png`}\n          key={`2${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n      ],\n    );\n  };\n  const generateFavicon = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/favicon-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n\n  return (\n    <Helmet>\n      <html dir={'ltr'} lang={language} />\n      <link\n        href={'/favicons/apple-touch-icon-precomposed.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link\n        href={'/favicons/apple-touch-icon.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link color={'#000'} href={'/favicons/safari-pinned-tab.svg'} rel={'mask-icon'} />\n      <link href={'/favicons/favicon.ico'} rel={'shortcut icon'} />\n      <link href={href} hrefLang={language} rel={'alternate'} />\n      <link href={href} rel={'canonical'} />\n      <meta content={'#fff'} name={'msapplication-TileColor'} />\n      <meta content={'#fff'} name={'theme-color'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} name={'twitter:image'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} property={'og:image'} />\n      <meta content={'/favicons/browserconfig.xml'} name={'msapplication-config'} />\n      <meta content={'/favicons/mstile-144x144.png'} name={'msapplication-TileImage'} />\n      <meta content={'512'} property={'og:image:height'} />\n      <meta content={'512'} property={'og:image:width'} />\n      <meta content={'@podabed'} name={'twitter:creator'} />\n      <meta content={'@podabed'} name={'twitter:site'} />\n      <meta content={'black-translucent'} name={'apple-mobile-web-app-status-bar-style'} />\n      <meta content={'summary'} name={'twitter:card'} />\n      <meta content={'website'} property={'og:type'} />\n      <meta content={'yes'} name={'apple-mobile-web-app-capable'} />\n      <meta content={href} name={'twitter:url'} />\n      <meta content={href} property={'og:url'} />\n      <meta content={formatMessage({ id: 'horseshoeingAndTrimming' })} name={'description'} />\n      <meta\n        content={formatMessage({ id: 'horseshoeingAndTrimming' })}\n        name={'twitter:description'}\n      />\n      <meta\n        content={formatMessage({ id: 'horseshoeingAndTrimming' })}\n        property={'og:description'}\n      />\n      <meta content={formatMessage({ id: 'keywords' }).toString()} name={'keywords'} />\n      <meta content={formatMessage({ id: 'title' })} name={'apple-mobile-web-app-title'} />\n      <meta content={formatMessage({ id: 'title' })} name={'application-name'} />\n      <meta content={formatMessage({ id: 'title' })} name={'twitter:title'} />\n      <meta content={formatMessage({ id: 'title' })} property={'og:site_name'} />\n      <meta content={formatMessage({ id: 'title' })} property={'og:title'} />\n      <meta content={language} property={'og:locale'} />\n      <title>{formatMessage({ id: 'title' })}</title>\n      {generateAndroidChrome([36, 48, 72, 96, 144, 192, 256, 384, 512])}\n      {generateAppleTouch([57, 60, 72, 76, 114, 120, 144, 152, 180])}\n      {generateFavicon([16, 32])}\n    </Helmet>\n  );\n};\n\nexport default injectIntl(Head);\n","import SelectLanguage from './SelectLanguage';\n\nexport default SelectLanguage;\n","import { IntlContextConsumer } from 'gatsby-plugin-intl';\nimport * as React from 'react';\n\nconst SelectLanguage = (props: any): React.ReactElement => {\n  return (\n    <IntlContextConsumer>\n      {(context: any): React.ReactElement[] => {\n        const { languages } = context;\n\n        return languages.map(\n          (language: string): React.ReactElement => {\n            const onClick = (): void => {\n              return props.toggleLanguage(language);\n            };\n\n            return (\n              <button key={language} onClick={onClick}>\n                {language}\n              </button>\n            );\n          },\n        );\n      }}\n    </IntlContextConsumer>\n  );\n};\n\nexport default SelectLanguage;\n","import Header from './Header';\n\nexport default Header;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport SelectLanguage from '../SelectLanguage';\nimport { IProps } from './interfaces';\n\nconst Header: (props: IProps) => React.ReactElement = (props) => {\n  const {\n    context: { isDark, toggleDark, toggleLanguage },\n  } = props;\n\n  const theme = isDark ? 'dark' : 'light';\n\n  return (\n    <header>\n      <Helmet htmlAttributes={{ theme }} />\n      <nav>\n        <button onClick={toggleDark}>{theme}</button>\n        <SelectLanguage toggleLanguage={toggleLanguage} />\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import Main from './Main';\n\nexport default Main;\n","import * as React from 'react';\n\nconst Main: (props: any) => React.ReactElement = (props) => {\n  return <main>{props.children}</main>;\n};\n\nexport default Main;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport * as React from 'react';\n\nimport Context from '../Context/Context';\nimport Footer from '../Footer';\nimport Head from '../Head';\nimport Header from '../Header';\nimport Main from '../Main';\n\nconst Layout: React.FC = (props: any): React.ReactElement => {\n  const { children, location } = props;\n\n  const {\n    site: {\n      siteMetadata: {},\n    },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <Context.Consumer>\n      {(context) => (\n        <>\n          <Head context={context} location={location} />\n          <Header context={context} />\n          <Main children={children} />\n          <Footer />\n        </>\n      )}\n    </Context.Consumer>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n"],"sourceRoot":""}