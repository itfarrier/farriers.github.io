{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/Footer/index.ts","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Head/index.ts","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/SelectLanguage/index.ts","webpack:///./src/components/SelectLanguage/SelectLanguage.tsx","webpack:///./src/components/ThemeChanger/index.ts","webpack:///./src/components/ThemeChanger/ThemeChanger.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Main/index.ts","webpack:///./src/components/Main/Main.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","props","location","Footer","react","className","styles","href","Head","injectIntl","language","context","formatMessage","intl","Helmet","dir","lang","rel","sizes","type","color","hrefLang","content","name","property","id","toString","map","size","key","sizesInPx","generateAppleTouch","generateFavicon","Button","children","onClick","text","classNames","role","defaultProps","SelectLanguage","gatsby_plugin_intl","languages","components_Button","toggleLanguage","ThemeChanger","isDark","viewBox","cx","cy","d","Header","_props$context","toggleDark","themeAttribute","Helmet_default","a","htmlAttributes","theme","components_ThemeChanger","Object","assign","components_SelectLanguage","Main","Layout","Context","Consumer","components_Head","components_Header","components_Main","components_Footer"],"mappings":"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","file":"component---src-pages-404-tsx-ecc22718a284585330ca.js","sourcesContent":["import * as React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst NotFoundPage: React.FC = (props) => <Layout location={props.location}>404</Layout>;\n\nexport default NotFoundPage;\n","import Footer from './Footer';\n\nexport default Footer;\n","import * as React from 'react';\n\nimport * as styles from './Footer.module.css';\n\nconst Footer: () => React.ReactElement = () => {\n  return (\n    <footer className={styles.footer}>\n      <a href={'mailto:info@farriers.ru'}>info@farriers.ru</a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Head from './Head';\n\nexport default Head;\n","import { injectIntl } from 'gatsby-plugin-intl';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Head: (props: any) => React.ReactElement = (props) => {\n  const {\n    context: { language },\n    intl: { formatMessage },\n    location: { href },\n  } = props;\n\n  const generateAndroidChrome = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/android-chrome-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  const generateAppleTouch = (sizesInPx: number[]): React.ReactElement[][] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement[] => [\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}.png`}\n          key={`1${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}-precomposed.png`}\n          key={`2${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n      ],\n    );\n  };\n  const generateFavicon = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/favicon-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n\n  return (\n    <Helmet>\n      <html dir={'ltr'} lang={language} />\n      <link\n        href={'/favicons/apple-touch-icon-precomposed.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link\n        href={'/favicons/apple-touch-icon.png'}\n        rel={'apple-touch-icon'}\n        sizes={'180x180'}\n        type={'image/png'}\n      />\n      <link color={'#000'} href={'/favicons/safari-pinned-tab.svg'} rel={'mask-icon'} />\n      <link href={'/favicons/favicon.ico'} rel={'shortcut icon'} />\n      <link href={href} hrefLang={language} rel={'alternate'} />\n      <link href={href} rel={'canonical'} />\n      <meta content={'#fff'} name={'msapplication-TileColor'} />\n      <meta content={'#fff'} name={'theme-color'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} name={'twitter:image'} />\n      <meta content={'/favicons/android-chrome-512x512.png'} property={'og:image'} />\n      <meta content={'/favicons/browserconfig.xml'} name={'msapplication-config'} />\n      <meta content={'/favicons/mstile-144x144.png'} name={'msapplication-TileImage'} />\n      <meta content={'512'} property={'og:image:height'} />\n      <meta content={'512'} property={'og:image:width'} />\n      <meta content={'@podabed'} name={'twitter:creator'} />\n      <meta content={'@podabed'} name={'twitter:site'} />\n      <meta content={'black-translucent'} name={'apple-mobile-web-app-status-bar-style'} />\n      <meta content={'summary'} name={'twitter:card'} />\n      <meta content={'website'} property={'og:type'} />\n      <meta content={'yes'} name={'apple-mobile-web-app-capable'} />\n      <meta content={href} name={'twitter:url'} />\n      <meta content={href} property={'og:url'} />\n      <meta content={formatMessage({ id: 'trimmingAndHorseshoeing' })} name={'description'} />\n      <meta\n        content={formatMessage({ id: 'trimmingAndHorseshoeing' })}\n        name={'twitter:description'}\n      />\n      <meta\n        content={formatMessage({ id: 'trimmingAndHorseshoeing' })}\n        property={'og:description'}\n      />\n      <meta content={formatMessage({ id: 'keywords' }).toString()} name={'keywords'} />\n      <meta content={formatMessage({ id: 'title' })} name={'apple-mobile-web-app-title'} />\n      <meta content={formatMessage({ id: 'title' })} name={'application-name'} />\n      <meta content={formatMessage({ id: 'title' })} name={'twitter:title'} />\n      <meta content={formatMessage({ id: 'title' })} property={'og:site_name'} />\n      <meta content={formatMessage({ id: 'title' })} property={'og:title'} />\n      <meta content={language} property={'og:locale'} />\n      <title>{formatMessage({ id: 'title' })}</title>\n      {generateAndroidChrome([36, 48, 72, 96, 144, 192, 256, 384, 512])}\n      {generateAppleTouch([57, 60, 72, 76, 114, 120, 144, 152, 180])}\n      {generateFavicon([16, 32])}\n    </Helmet>\n  );\n};\n\nexport default injectIntl(Head);\n","import * as React from 'react';\n\nimport * as styles from './Button.module.css';\nimport { IProps } from './interfaces';\n\nconst Button = (props: IProps) => {\n  const { children, className, onClick, text } = props;\n\n  const classNames = className ? `${styles.button} ${className}` : styles.button;\n\n  return (\n    <button className={classNames} onClick={onClick} role={'button'}>\n      {children || text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  children: '',\n  className: '',\n  // tslint:disable-next-line: no-empty\n  onClick: () => {},\n  text: 'button',\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import SelectLanguage from './SelectLanguage';\n\nexport default SelectLanguage;\n","import { injectIntl, IntlContextConsumer } from 'gatsby-plugin-intl';\nimport * as React from 'react';\n\nimport Button from '../Button';\nimport * as styles from './SelectLanguage.module.css';\n\nconst SelectLanguage = (props: any): React.ReactElement => {\n  const {\n    intl: { formatMessage },\n  } = props;\n\n  return (\n    <IntlContextConsumer>\n      {(context: any): React.ReactElement[] => {\n        return context.languages.map(\n          (language: string): React.ReactElement => {\n            const onClick = (): void => {\n              return props.toggleLanguage(language);\n            };\n\n            return (\n              <Button\n                className={styles.button}\n                key={language}\n                onClick={onClick}\n                text={formatMessage({ id: language })}\n              />\n            );\n          },\n        );\n      }}\n    </IntlContextConsumer>\n  );\n};\n\nexport default injectIntl(SelectLanguage);\n","import ThemeChanger from './ThemeChanger';\n\nexport default ThemeChanger;\n","import * as React from 'react';\n\nimport Button from '../Button';\nimport { IProps } from './interfaces';\nimport * as styles from './ThemeChanger.module.css';\n\nconst ThemeChanger = (props: IProps): React.ReactElement => {\n  const classNames = props.context.isDark\n    ? `${styles.svg} ${styles.night}`\n    : `${styles.svg} ${styles.day}`;\n\n  return (\n    <Button className={styles.themeChanger} onClick={props.onClick}>\n      <svg className={classNames} viewBox={'0 0 24 64'}>\n        <circle cx={'12'} cy={'16'} r={'4'} />\n        <path\n          d={\n            'M12,11h0a1,1,0,0,1-1-1c.08-.63.61-3.45.61-3.45a.4.4,0,0,1,.77,0S12.92,9.37,13,10A1,1,0,0,1,12,11Z'\n          }\n        />\n        <path\n          d={\n            'M8.46,12.46h0a1,1,0,0,1-1.41,0C6.66,12,5,9.59,5,9.59A.4.4,0,0,1,5.59,9s2.38,1.62,2.87,2A1,1,0,0,1,8.46,12.46Z'\n          }\n        />\n        <path\n          d={\n            'M7,16H7a1,1,0,0,1-1,1c-.63-.08-3.45-.61-3.45-.61a.4.4,0,0,1,0-.77S5.37,15.08,6,15A1,1,0,0,1,7,16Z'\n          }\n        />\n        <path\n          d={\n            'M8.46,19.54h0a1,1,0,0,1,0,1.41c-.5.39-2.87,2-2.87,2A.4.4,0,0,1,5,22.41s1.62-2.38,2-2.87A1,1,0,0,1,8.46,19.54Z'\n          }\n        />\n        <path\n          d={\n            'M12,21h0a1,1,0,0,1,1,1c-.08.63-.61,3.45-.61,3.45a.4.4,0,0,1-.77,0S11.08,22.63,11,22A1,1,0,0,1,12,21Z'\n          }\n        />\n        <path\n          d={\n            'M15.54,19.54h0a1,1,0,0,1,1.41,0c.39.5,2,2.87,2,2.87a.4.4,0,0,1-.55.55s-2.38-1.62-2.87-2A1,1,0,0,1,15.54,19.54Z'\n          }\n        />\n        <path\n          d={\n            'M17,16h0a1,1,0,0,1,1-1c.63.08,3.45.61,3.45.61a.4.4,0,0,1,0,.77s-2.82.54-3.45.61A1,1,0,0,1,17,16Z'\n          }\n        />\n        <path\n          d={\n            'M15.54,12.46h0a1,1,0,0,1,0-1.41c.5-.39,2.87-2,2.87-2a.4.4,0,0,1,.55.55s-1.62,2.38-2,2.87A1,1,0,0,1,15.54,12.46Z'\n          }\n        />\n        <path\n          d={\n            'M7.37,47.75A7.09,7.09,0,0,1,14.64,41h.18a1,1,0,0,1,.47,1.84,6,6,0,0,0,0,10.3,1,1,0,0,1-.5,1.84h-.42A7,7,0,0,1,7.37,47.75Z'\n          }\n        />\n      </svg>\n    </Button>\n  );\n};\n\nexport default ThemeChanger;\n","import Header from './Header';\n\nexport default Header;\n","import { injectIntl } from 'gatsby-plugin-intl';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport Button from '../Button';\nimport SelectLanguage from '../SelectLanguage';\nimport ThemeChanger from '../ThemeChanger';\nimport * as styles from './Header.module.css';\nimport { IProps } from './interfaces';\n\nconst Header: (props: IProps) => React.ReactElement = (props) => {\n  const {\n    context: { isDark, toggleDark, toggleLanguage },\n    intl: { formatMessage },\n  } = props;\n\n  const themeName = isDark ? formatMessage({ id: 'dark' }) : formatMessage({ id: 'light' });\n  const themeAttribute = isDark ? 'dark' : 'light';\n\n  return (\n    <header className={styles.header}>\n      <Helmet htmlAttributes={{ theme: themeAttribute }} />\n      <nav className={styles.nav}>\n        <ThemeChanger onClick={toggleDark} {...props} />\n        <SelectLanguage toggleLanguage={toggleLanguage} />\n      </nav>\n    </header>\n  );\n};\n\nexport default injectIntl(Header);\n","import Main from './Main';\n\nexport default Main;\n","import * as React from 'react';\n\nimport * as styles from './Main.module.css';\n\nconst Main: (props: any) => React.ReactElement = (props) => {\n  return <main className={styles.main}>{props.children}</main>;\n};\n\nexport default Main;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport * as React from 'react';\n\nimport Context from '../Context/Context';\nimport Footer from '../Footer';\nimport Head from '../Head';\nimport Header from '../Header';\nimport Main from '../Main';\nimport * as styles from './Layout.module.css';\n\nconst Layout: React.FC = (props: any): React.ReactElement => {\n  return (\n    <Context.Consumer>\n      {(context) => {\n        return (\n          <div className={styles.container}>\n            <Head context={context} location={props.location} />\n            <Header context={context} />\n            <Main children={props.children} />\n            <Footer />\n          </div>\n        );\n      }}\n    </Context.Consumer>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n"],"sourceRoot":""}